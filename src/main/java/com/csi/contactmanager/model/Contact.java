package com.csi.contactmanager.model;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import javax.persistence.Entity;
import javax.persistence.Id;
import java.util.Objects;

@Data
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class Contact {

    @Id
    String name;
    String phone;
    String email;

    /**
     * The format required by the task
     * @return
     */
    public String toString(){
        return "Name: " + name + "\n"
                + "Number: " + phone + "\n"
                + "Email: " + email + "\n";
    }

    /**
     * equals function needed for assertions
     * @param o
     * @return
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Contact contact = (Contact) o;
        return Objects.equals(getName(), contact.getName()) &&
                Objects.equals(getPhone(), contact.getPhone()) &&
                Objects.equals(getEmail(), contact.getEmail());
    }

    /**
     * This got autogenerated, but it's still correct. Can be modified any time
     * The multiple contacts with the same name wasn't specified in the task
     * We would use this hasCode an ID to allow multiple contacts with the same name
     * @return
     */
    @Override
    public int hashCode() {

        return Objects.hash(getName(), getPhone(), getEmail());
    }
}
